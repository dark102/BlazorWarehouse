@page "/warehouseAndProductManagement"

<PageTitle>Управление складами и товарами</PageTitle>

@using BlazorApp1.Service
@using BlazorApp1.Infrastructure
@inject WarehouseService warehouseService
@inject NavigationManager Navigation
@implements IDisposable

<h1>Счетчик:@warehouseService.GetCounter()</h1>
@if (warehouseService.GetCash().Count() == 0)
{
	<p><em>Loading...</em></p>
}
else
{
	@foreach (var warehouse in warehouseService.GetCash())
	{
		<h1>@warehouse.Key.WarehouseName</h1>
		@if (warehouse.Value.Count() == 0)
		{
			<p><em>Loading...</em></p>
		}
		else
		{
			<table class="table">
				<thead>
					<tr>
						<th>Товар</th>
						<th>Количество</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var product in warehouse.Value)
					{
						<tr>
							<td>@product.ProdyctName</td>
							<td>
								<button class="btn btn-primary" @onclick="@(e => warehouseService.DecrementCount(warehouse.Key, product))">-</button>
								@product.ProdyctCount
								<button class="btn btn-primary" @onclick="@(e => warehouseService.IncrementCount(warehouse.Key, product))">+</button>

							</td>
						</tr>
					}
				</tbody>
			</table>
		}
	}
}


@code {
	protected override async Task OnInitializedAsync()
	{
		warehouseService.InitDictionary();
		Navigation.LocationChanged += warehouseService.HandleLocationChanged;
		warehouseService.OnChange += () => StateHasChanged();
	}
	public void Dispose()
	{
		Navigation.LocationChanged -= warehouseService.HandleLocationChanged;
	}
}
